name: CI

permissions:
  contents: read

on:
  pull_request:
  push:
    branches:
      - alpha
      - beta
      - main
      - renovate/**

jobs:
  prepare_jobs:
    name: "Prepare: job optimization"
    runs-on: ubuntu-latest
    outputs:
      pr_found: ${{ steps.pr.outputs.pr_found }}
    steps:
      - name: Get current PR
        id: pr
        uses: 8BitJonny/gh-get-current-pr@3.0.0
        with:
          filterOutClosed: true
          filterOutDraft: true
          sha: ${{ github.event.pull_request.head.sha }}
  release_semantic_dry:
    needs: prepare_jobs
    name: Release (semantic, dry)
    uses: dargmuesli/github-actions/.github/workflows/release-semantic.yml@2.6.1
    if: needs.prepare_jobs.outputs.pr_found == 'false' || github.event_name == 'pull_request'
    permissions:
      contents: write
    secrets:
      PERSONAL_ACCESS_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
    with:
      APT_PACKAGES: mkcert
      DRY_RUN: true
  build:
    name: Build
    uses: dargmuesli/github-actions/.github/workflows/docker.yml@2.6.1
    needs: release_semantic_dry
    permissions:
      packages: write
    with:
      BUILD_ARGUMENTS: RELEASE_NAME=${{ needs.release_semantic_dry.outputs.new_release_version }}
      TAG: ${{ needs.release_semantic_dry.outputs.new_release_version }}
    secrets:
      BUILD_ARGUMENTS: SENTRY_AUTH_TOKEN=${{ secrets.SENTRY_AUTH_TOKEN }}
  e2e_tests:
    name: E2E Tests
    needs: build
    runs-on: ubuntu-latest
    services:
      postgres:
        image: imresamu/postgis:17-3.5.2-alpine3.21
        env:
          POSTGRES_DB: vibetype
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: "10.14.0"

      - name: Install dependencies
        run: pnpm install

      - name: Setup test database
        run: |
          chmod +x tests/database/setup.sh
          POSTGRES_HOST=localhost ./tests/database/setup.sh

      - name: Start PostGraphile
        run: |
          docker run -d --name postgraphile \
            --network host \
            -e POSTGRAPHILE_CONNECTION=postgres://postgres:postgres@localhost:5432/vibetype \
            -e POSTGRAPHILE_OWNER_CONNECTION=postgres://postgres:postgres@localhost:5432/vibetype \
            -e POSTGRAPHILE_JWT_SECRET_KEY=test-jwt-secret \
            -p 5000:5000 \
            ghcr.io/maevsi/postgraphile:1.0.4
          sleep 10

      - name: Run E2E tests
        run: |
          cd tests
          pnpm run test:e2e:server:dev

  e2e_tests_mock:
    name: E2E Tests (Mock)
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: "10.14.0"

      - name: Install dependencies
        run: pnpm install

      - name: Run E2E tests with mock API
        env:
          NUXT_PUBLIC_VIO_IS_TESTING: true
        run: |
          cd tests
          pnpm run test:e2e:server:dev

  release_semantic:
    needs: [build, e2e_tests]
    name: Release (semantic)
    uses: dargmuesli/github-actions/.github/workflows/release-semantic.yml@2.6.1
    permissions:
      contents: write
    secrets:
      PERSONAL_ACCESS_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
    with:
      APT_PACKAGES: mkcert
